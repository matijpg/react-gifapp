{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","title","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAkB/C,OACG,0BAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACGO,KAAK,OACLC,MAAOT,EACPU,SAnBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,QAmBjBG,YAAY,a,uBCzBXC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGdC,EAHc,iDAGkCC,UAAUH,GAH5C,+DAKDI,MAAM,GAAD,OAAIF,IALR,cAKdG,EALc,gBAOGA,EAAKC,OAPR,uBAOZC,EAPY,EAOZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACJC,GAAID,EAAIC,GACRT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,IAClCY,MAAOJ,EAAII,UAdG,kBAkBbN,GAlBa,4CAAH,sDCFPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBG,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IAGtC,OACG,yBAAKc,UAAU,6CACZ,yBAAKC,IAAKf,EAAKgB,IAAKJ,IACpB,2BAAIA,KCJAK,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECEb,SAACA,GAAc,IAAD,EACbf,mBAAS,CAChCsB,KAAM,GACNa,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAqBvC,OAfAC,qBAAU,WAEPxB,EAAQC,GACJwB,MAAK,SAAAC,GAEHH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAGGqB,EDrB2BK,CAAa1B,GAAjCY,EAFwB,EAE9BL,KAAca,EAFgB,EAEhBA,QAEtB,OACG,oCACG,wBAAIJ,UAAU,uCAAd,IAAsDhB,EAAtD,KACCoB,GAAW,uBAAGJ,UAAU,kBAAb,cACZ,yBAAKA,UAAU,aAETJ,EAAOH,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eACGiB,IAAKjB,EAAIC,IACLD,UEiBVkB,EA7BM,WAAO,IAAD,EAEY3C,mBAAS,CAAC,mBAFtB,mBAEjB4C,EAFiB,KAEL7C,EAFK,KASxB,OACG,oCACG,wBAAIgC,UAAU,QAAd,YACA,kBAAC,EAAD,CAAahC,cAAeA,IAC5B,6BAEA,4BAEM6C,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACGA,SAAUA,EACV2B,IAAK3B,U,MClB1B8B,IAASC,OACN,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c76dd578.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value)\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n\r\n         setCategories(cats => [inputValue, ...cats]);\r\n         setInputValue('')\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            placeholder='Buscar'\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","//HELPERS\r\n//Funciones que hacen un cierto trabajo en especifico\r\n//y regresa algun retorn.\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n   // const apiKey = 'CChSuS3Vxj70rZX2VVMQimpT6P0dEFxi';\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CChSuS3Vxj70rZX2VVMQimpT6P0dEFxi`;\r\n\r\n   const resp = await fetch(`${url}`);\r\n\r\n   const { data } = await resp.json();\r\n   // console.log(data)\r\n   const gifs = data.map(img => {\r\n      // return console.log(img.images.downsized.url);\r\n      return {\r\n         id: img.id,\r\n         url: img.images?.downsized_medium.url,\r\n         title: img.title,\r\n      }\r\n   })\r\n\r\n   return gifs;\r\n   // console.log(gifs);\r\n   // setImages(gifs);\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n   // console.log(id, title, url);\r\n   return (\r\n      <div className=\"card  animate__animated animate__fadeInUp\">\r\n         <img src={url} alt={title}></img>\r\n         <p>{title}</p>\r\n      </div>\r\n   )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__animated animate__fadeInUp\"> {category} </h3>\r\n         {loading && <p className=\"animate__flash\">Loading...</p>}\r\n         <div className=\"card-grid\">\r\n            {\r\n               images.map((img) => (\r\n                  <GifGridItem\r\n                     key={img.id}\r\n                     {...img}\r\n                  />\r\n               ))\r\n            }\r\n\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\n// <li key={id}>\r\n//    <h4>{url}</h4>\r\n//    <img src={gif}\r\n//       title={url}\r\n//    />\r\n// </li>","\r\n//custom hooks = logica de los componentes!\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true,\r\n   });\r\n\r\n   useEffect(() => {\r\n\r\n      getGifs(category)\r\n         .then(imgs => {\r\n\r\n            setState({\r\n               data: imgs,\r\n               loading: false,\r\n            })\r\n\r\n         })\r\n\r\n   }, [category]);\r\n\r\n\r\n   return state; //{data: [], loading: true}\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['Rick and Morty']);\r\n\r\n   //Handle\r\n   // const handleAdd = () => {\r\n   //    setCategories([...categories, 'Pepa Pig'])\r\n   // }\r\n\r\n   return (\r\n      <>\r\n         <h2 className=\"logo\"> Gifapp </h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n\r\n         <ol>\r\n            {\r\n               categories.map(category => (\r\n                  <GifGrid\r\n                     category={category}\r\n                     key={category}\r\n                  />\r\n               ))\r\n            }\r\n         </ol>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n   <GifExpertApp />,\n   document.getElementById('root')\n);"],"sourceRoot":""}